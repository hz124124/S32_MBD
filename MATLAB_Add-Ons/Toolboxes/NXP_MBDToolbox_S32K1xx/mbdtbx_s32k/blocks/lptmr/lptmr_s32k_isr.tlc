%implements lptmr_s32k_isr "C"

%% Copyright (c) 2017 NXP.
%% All rights reserved.

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%
%% Function executes once per block type before code generation begins
%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%function BlockTypeSetup(block, system) void
    %if FEVAL("mbd_s32k_is_codegen_compatible", CompiledModel.Name)

    %<LibAddToCommonIncludes("lptmr_driver.h")>

    %endif
%endfunction


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%
%% Function executes once and only once at the beginning of the simulation
%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%function Start(block, system) Output
    %if FEVAL("mbd_s32k_is_codegen_compatible", CompiledModel.Name)

    %assign instance = 0

    %openfile buffer
        void LPTMR_ISR(void)
        {
            LPTMR_DRV_ClearCompareFlag(INST_LPTMR%<instance>);
            /* Attached S-Function call */
            %%should be just one interrupt
            %foreach fcnCallIdx = NumSFcnSysOutputCalls
                %% call the downstream system
                %with SFcnSystemOutputCall[fcnCallIdx]
                    %% skip unconnected function call outputs
                    %if ISEQUAL(BlockToCall, "unconnected")
                        %continue
                    %endif

                    %<LibBlockExecuteFcnCall(block, fcnCallIdx)>
                %endwith
            %endforeach
        }
    %closefile buffer
    %<LibSetSourceFileSection(LibGetModelDotCFile(), "Functions", buffer)>

    INT_SYS_InstallHandler(LPTMR0_IRQn, &LPTMR_ISR, (void *)0);
	/* Enable IRQ for LPTMR */
	INT_SYS_EnableIRQ(LPTMR0_IRQn);

    %endif
%endfunction
