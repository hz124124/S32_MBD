%implements rtc_s32k_seconds_isr "C"

%% Copyright (c) 2018 NXP.
%% All rights reserved.

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%
%% Function executes once per block type before code generation begins
%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%function BlockTypeSetup(block, system) void
    %if FEVAL("mbd_s32k_is_codegen_compatible", CompiledModel.Name)

    %<LibAddToCommonIncludes("rtc_driver.h")>
    %<LibAddToCommonIncludes("pcc_hw_access.h")>
    %<LibAddToCommonIncludes("interrupt_manager.h")>

    %endif
%endfunction


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%
%% Function executes once and only once at the beginning of the simulation
%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%function Start(block, system) Output
    %if FEVAL("mbd_s32k_is_codegen_compatible", CompiledModel.Name)
    %assign blockPath = LibGetBlockPath(block)

    %assign instance = 0
    %% Seconds ISR function code
    %openfile buffer
        void rtcTimer%<instance>_SecondsISR(void* params)
        {
            // Attached S-Function call
            %% should be just one interrupt
            %foreach fcnCallIdx = NumSFcnSysOutputCalls
                %% call the downstream system
                %with SFcnSystemOutputCall[fcnCallIdx]
                    %% skip unconnected function call outputs
                    %if ISEQUAL(BlockToCall, "unconnected")
                        %continue
                    %endif

                    %<LibBlockExecuteFcnCall(block, fcnCallIdx)>
                %endwith
            %endforeach
        }
    %closefile buffer
    %<LibSetSourceFileSection(LibGetModelDotCFile(), "Functions", buffer)>

    %% Alarm ISR Structure intitalization code
    %assign sdk_params = FEVAL("mbd_s32k_rtc_seconds_isr_sdk_params", blockPath)
    %openfile buffer
    // rtcTimer%<instance> Time Seconds Interrupt Configuration
    rtc_seconds_int_config_t rtcTimer%<instance>_SecIntConfig =
    {
        .secondIntConfig               =    %<sdk_params.user_config.sec_irq_freq>,
        .secondIntEnable               =    true,
        .rtcSecondsCallback            =    rtcTimer%<instance>_SecondsISR,
        .secondsCallbackParams         =    NULL
    };

    %closefile buffer
    %<LibSetSourceFileSection(LibGetModelDotCFile(), "Declarations", buffer)>

    %endif
%endfunction
