
%implements GDFLIB_FilterIIR1_SF_F16 "C"

%% Function: BlockTypeSetup ===================================================
%% Abstract:
%%   Declare external variables and functions
%%
%function BlockTypeSetup(block, system) void

   %if !EXISTS("GDFLIB_INCLUDED")
      %assign ::GDFLIB_INCLUDED = 1
      %<LibCacheIncludes("#include \"gdflib.h\"" + "\n")>
   %endif 
   
   %assign ::cntIIR1 = 0
   %assign ::cntInitIIR1 = 0
   
%endfunction

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%
%%  Start Function of S-Function 
%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%function Start(block, system) Output 

   %assign ::cntInitIIR1 = %<::cntInitIIR1> + 1
	 
%assign fFIRparams = LibCreateSourceFile("Source", "Custom", "FIRparams")
%openfile tmpParamBuf 
   %if !EXISTS("GDFLIB_INCLUDED_TO_FIRPARAM")
      %assign ::GDFLIB_INCLUDED_TO_FIRPARAM = 1
      #include "gdflib.h"
   %endif 
    GDFLIB_FILTER_IIR1_T_F16 trMyFilterIIR1_%<::cntInitIIR1> = GDFLIB_FILTER_IIR1_DEFAULT_F16;
%closefile tmpParamBuf
%<LibSetSourceFileSection(fFIRparams , "Definitions", tmpParamBuf)>

    %assign B0   = CAST("Number",Parameter[0].Value[0])
    %assign B1   = CAST("Number",Parameter[1].Value[0])
    %assign A1   = CAST("Number",Parameter[2].Value[0])
	
	trMyFilterIIR1_%<::cntInitIIR1>.trFiltCoeff.f16B0 = %<B0>;  
	trMyFilterIIR1_%<::cntInitIIR1>.trFiltCoeff.f16B1 = %<B1>; 
	trMyFilterIIR1_%<::cntInitIIR1>.trFiltCoeff.f16A1 = %<A1>;
	 
    GDFLIB_FilterIIR1Init_F16(&trMyFilterIIR1_%<::cntInitIIR1>);
   
%openfile tmpParamExternBuf 
    extern GDFLIB_FILTER_IIR1_T_F16 trMyFilterIIR1_%<::cntInitIIR1>;
%closefile tmpParamExternBuf
%<LibCacheExtern(tmpParamExternBuf)>   
   
%endfunction

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%
%%  Outputs Function of S-Function 
%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Function: Outputs ==========================================================
%% Abstract:
%%
%function Outputs(block, system) Output

    %assign ::cntIIR1 = %<::cntIIR1> + 1
   
    %assign f16In = LibBlockInputSignal(0, "", "", 0)
    %assign f16InFiltBufferX = LibBlockInputSignal(1, "", "", 0)
    %assign f32InFiltBufferY = LibBlockInputSignal(2, "", "", 0)
    %assign f16Out = LibBlockOutputSignal(0, "", "", 0)
    %assign f16OutFiltBufferX = LibBlockOutputSignal(1, "", "", 0)
    %assign f32OutFiltBufferY = LibBlockOutputSignal(2, "", "", 0)
   
    trMyFilterIIR1_%<::cntIIR1>.f16FiltBufferX[0] = %<f16InFiltBufferX>;
    trMyFilterIIR1_%<::cntIIR1>.f32FiltBufferY[0] = %<f32InFiltBufferY>;
   
    %<f16Out> = GDFLIB_FilterIIR1_F16(%<f16In>, &trMyFilterIIR1_%<::cntIIR1>);
    
	%<f16OutFiltBufferX> = trMyFilterIIR1_%<::cntIIR1>.f16FiltBufferX[0];
	%<f32OutFiltBufferY> = trMyFilterIIR1_%<::cntIIR1>.f32FiltBufferY[0];

%endfunction
