
%implements GMCLIB_DecouplingPMSM_SF_F32 "C"


%% Function: BlockTypeSetup ===================================================
%% Abstract:
%%   Declare external variables and functions
%%
%function BlockTypeSetup(block, system) void

   %if !EXISTS("GMCLIB_INCLUDED")
      %assign ::GMCLIB_INCLUDED = 1
      %<LibCacheIncludes("#include \"gmclib.h\"" + "\n")>
   %endif 

%endfunction
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%
%%  Start Function of S-Function 
%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%function Start(block, system) Output 

   
%endfunction

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%
%%  Outputs Function of S-Function 
%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Function: Outputs ==========================================================
%% Abstract:
%%
%function Outputs(block, system) Output

  %assign f32Kd  = CAST("Number",Parameter[0].Value[0])
  %assign s32KdShift  = CAST("Number",Parameter[1].Value[0])
  %assign f32Kq  = CAST("Number",Parameter[2].Value[0])
  %assign s32KqShift  = CAST("Number",Parameter[3].Value[0])
  
  %assign Ud     = LibBlockInputSignal(0, "", "", 0)
  %assign Uq     = LibBlockInputSignal(1, "", "", 0)
  %assign Id     = LibBlockInputSignal(2, "", "", 0)
  %assign Iq     = LibBlockInputSignal(3, "", "", 0)
  %assign AngVel = LibBlockInputSignal(4, "", "", 0)
  %assign UdDec  = LibBlockOutputSignal(0, "", "", 0)
  %assign UqDec  = LibBlockOutputSignal(1, "", "", 0)
  
  { 
    SWLIBS_2Syst_F32 UdqDec;  
    SWLIBS_2Syst_F32 Udq;
	SWLIBS_2Syst_F32 Idq;
	const SWLIBS_2Syst_F32 *const pUdq = &Udq;
	const SWLIBS_2Syst_F32 *const pIdq = &Idq;
    static const GMCLIB_DECOUPLINGPMSM_T_F32 param = { %<f32Kd>, %<s32KdShift>, %<f32Kq>, %<s32KqShift> };
	static const GMCLIB_DECOUPLINGPMSM_T_F32 *const pParam = &param;
	
	Udq.f32Arg1 = %<Ud>;
	Udq.f32Arg2 = %<Uq>; 
	Idq.f32Arg1 = %<Id>;
	Idq.f32Arg2 = %<Iq>; 
    GMCLIB_DecouplingPMSM_F32 (&UdqDec, pUdq, pIdq, %<AngVel>, pParam);
	%<UdDec> = UdqDec.f32Arg1;
	%<UqDec> = UdqDec.f32Arg2;
  }

%endfunction
